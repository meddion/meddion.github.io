{"version":3,"sources":["serviceWorker.js","utils/crud.js","utils/auth.js","utils/helpers.js","components/Reusable.js","components/Errors/index.js","components/Header/index.js","components/Loading.js","components/FeedNav/index.js","components/Post/index.js","components/CreatePost/index.js","components/Posts.js","pages/Feed.js","pages/Post.js","components/newQAComponent/index.js","pages/DeletePost.js","components/EmailForm.js","pages/About.js","pages/Login.js","pages/Logout.js","pages/Page404.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","API_URL","process","isUserAuthorized","a","async","axios","post","resp","data","ok","loginUser","name","password","logoutUser","Error","message","createPost","newPost","error","body","updatePost","updatedPost","put","deletePost","postID","delete","fetchPosts","pageNum","get","fetchPost","postId","fetchPostsInfo","postsPerPage","totalNumOfPosts","authorizationCheck","authStatus","this","authSubject","BehaviorSubject","getValue","asObservable","status","isAuthorized","next","AppContext","React","createContext","validatePost","title","content","length","ErrorBlock","withRouter","headerStyle","pathname","id","className","to","Consumer","LoadingBlock","color","size","type","height","width","SimpleError","MinimalisticError","FeedNav","state","isLoading","isError","console","setState","isNextDisabled","props","currentPageNum","Math","ceil","isPrevDisabled","prev","Component","dayjs","extend","relativeTime","PostCard","children","Post","PostEdit","inputChangeHandler","onChange","value","placeholder","PostEditHeader","PostTime","creationTime","lastEdited","unix","fromNow","PostNav","onClick","history","goBack","CreatePost","editTitle","editContent","e","target","handleFormSubmit","preventDefault","trim","validateError","appendPostHandler","creation_time","Date","now","last_edited","btnDisabled","onSubmit","Posts","posts","map","i","substring","key","Feed","prevState","unshift","1","setPosts","getPosts","prevProps","isPresentInPosts","context","urlParam","parseInt","params","contextType","cancelHandler","push","url","updatePostHandler","isTitleChanged","isContentChanged","isFetchingPostError","isEditMode","queryString","parse","search","edit","values","question","action","buttonHandler","newQAComponent","EmailForm","email","trimLeft","scrollTo","document","scrollHeight","handleHTMLFormSubmit","htmlFor","cols","rows","About","M","Parallax","init","querySelectorAll","Tabs","href","src","alt","role","aria-label","Login","username","errorMsg","validateForm","err","auth","data-length","Page404","App","stateChange","subscribe","Provider","exact","path","redirect","component","Logout","DeletePost","PageRoute","rest","PageComponent","insideSection","render","ProtectedRoute","NeedToBeUnauthorizedToSeeRoute","defaults","withCredentials","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d98f87d7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\"\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nconst isUserAuthorized = async () => {\n  try {\n    const resp = await axios.post(`${API_URL}account/login`)\n    return resp.data.ok\n  } catch (error) {}\n  return false\n}\n\nconst loginUser = async (name, password) => {\n  try {\n    const resp = await axios.post(`${API_URL}account/login`, {\n      name,\n      password,\n    })\n    if (!resp.data.ok) {\n      return \"The username and the password do not match.\"\n    }\n  } catch (error) {\n    return \"The internal server error has occurred.\"\n  }\n  return \"\"\n}\n\nconst logoutUser = async () => {\n  try {\n    const resp = await axios.post(`${API_URL}account/logout`)\n    if (!resp.data || !resp.data.ok) {\n      throw new Error(\"Couldn't perform logout properly.\")\n    }\n  } catch (error) {\n    return error.message\n  }\n  return \"\"\n}\n\nconst createPost = async newPost => {\n  let resp\n  try {\n    resp = await axios.post(`${API_URL}post/`, newPost)\n    if (!resp.data || !resp.data.ok) {\n      throw new Error(\n        \"Couldn't create a new post, reason: \" + resp.data.error,\n      )\n    }\n  } catch (error) {\n    return {\n      body: null,\n      error: error.message,\n    }\n  }\n  return {\n    body: resp.data.body,\n    error: \"\",\n  }\n}\n\nconst updatePost = async updatedPost => {\n  try {\n    const resp = await axios.put(`${API_URL}post/`, updatedPost)\n    if (!resp.data || !resp.data.ok) {\n      return \"Couldn't update the post, reason: \" + resp.data.error\n    }\n  } catch (error) {\n    return \"Failed to update the post.\"\n  }\n  return \"\"\n}\n\nconst deletePost = async postID => {\n  try {\n    const resp = await axios.delete(`${API_URL}post/${postID}`)\n    if (!resp.data || !resp.data.ok) {\n      return \"Couldn't delete the post, reason: \" + resp.data.error\n    }\n  } catch (error) {\n    return error.message\n  }\n  return \"\"\n}\n\nconst fetchPosts = async pageNum => {\n  let resp\n  try {\n    resp = await axios.get(\n      `${API_URL}posts/${pageNum}?sortByDate=asc`,\n    )\n    if (!resp.data.ok) throw new Error(resp.data.error)\n  } catch (error) {\n    return {\n      body: null,\n      error: error.message,\n    }\n  }\n  return {\n    body: resp.data.body,\n    error: \"\",\n  }\n}\n\nconst fetchPost = async postId => {\n  let resp\n  try {\n    resp = await axios.get(`${API_URL}post/${postId}`)\n    if (!resp.data.ok) throw new Error(\"\")\n  } catch (error) {\n    return {\n      body: null,\n      error: \"Failed to fetch the post's content and title.\",\n    }\n  }\n  return {\n    body: resp.data.body,\n    error: \"\",\n  }\n}\n\nconst fetchPostsInfo = async () => {\n  let resp\n  try {\n    resp = await axios.get(`${API_URL}posts/info`)\n    if (!resp.data.ok) {\n      throw new Error(resp.data.error)\n    }\n    if (\n      !resp.data.body.postsPerPage ||\n      !resp.data.body.totalNumOfPosts\n    ) {\n      throw new Error(\"on receiving a wrong data from the server\")\n    }\n  } catch (error) {\n    return {\n      body: null,\n      error: error.message,\n    }\n  }\n  return {\n    body: resp.data.body,\n    error: \"\",\n  }\n}\n\nexport {\n  isUserAuthorized,\n  loginUser,\n  logoutUser,\n  createPost,\n  updatePost,\n  deletePost,\n  fetchPost,\n  fetchPosts,\n  fetchPostsInfo,\n}\n","import { BehaviorSubject } from \"rxjs\"\nimport { isUserAuthorized } from \"./crud\"\n\nclass Auth {\n  constructor() {\n    this.authSubject = new BehaviorSubject(false)\n    this.authorizationCheck()\n  }\n\n  get isAuthorized() {\n    return this.authSubject.getValue()\n  }\n\n  get stateChange() {\n    return this.authSubject.asObservable()\n  }\n\n  set authStatus(status) {\n    if (status === this.isAuthorized) {\n      return\n    }\n    this.authSubject.next(status)\n  }\n\n  authorizationCheck = async () => {\n    this.authStatus = await isUserAuthorized()\n  }\n}\n\nexport default new Auth()\n","import React from \"react\"\n\nconst AppContext = React.createContext()\n\nfunction validatePost(title, content) {\n  if (content === \"\") {\n    return \"The content of the post cannot be empty.\"\n  }\n  if (title.length > 70) {\n    return \"Title couldn't be more then 70 symbols long.\"\n  }\n  if (content.length > 10000) {\n    return \"The content of the post couldn't be more then 10000 symbols long.\"\n  }\n  return \"\"\n}\n\nexport { validatePost, AppContext }\n","import React from \"react\"\n\nconst insideContainer = Component => props => (\n  <div className=\"container\">\n    <Component {...props} />\n  </div>\n)\n\nconst insideSection = Component => props => (\n  <section className=\"section\">\n    <Component {...props} />\n  </section>\n)\n\nexport { insideContainer, insideSection }\n","import React from \"react\"\n\nimport \"./Errors.css\"\n\nconst SimpleError = ({ error }) => {\n  return (\n    <div id=\"simple-error\" className=\"grey darken-4\">\n      <p>{error}</p>\n    </div>\n  )\n}\n\nconst TitledErrorBlock = ({ title, content }) => (\n  <div id=\"error-block\" className=\"row grey darken-4 white-text\">\n    <div className=\"col s12 z-depth-1\">\n      <h3>{title}</h3>\n      <p className=\"flow-text\">{content}</p>\n    </div>\n  </div>\n)\n\nconst MinimalisticError = ({ content }) => (\n  <div className=\"row\">\n    <div className=\"col s12 z-depth-0 center-align\">\n      <p className=\"grey-text \">{content}</p>\n    </div>\n  </div>\n)\n\nconst withErrorBlock = ErrorBlock => Component => ({\n  errorTitle = \"Oppss\",\n  errorContent = \"Something went wrong...\",\n  isError,\n  ...rest\n}) => {\n  if (isError) {\n    return <ErrorBlock title={errorTitle} content={errorContent} />\n  }\n  return <Component {...rest} />\n}\n\nconst withDefaultErrorBlock = withErrorBlock(TitledErrorBlock)\n\nexport {\n  SimpleError,\n  TitledErrorBlock,\n  MinimalisticError,\n  withDefaultErrorBlock,\n  withErrorBlock,\n}\n","import React from \"react\"\nimport { withRouter, Link } from \"react-router-dom\"\n\nimport { AppContext } from \"../../utils/helpers\"\n\nimport \"./Header.css\"\n\nconst Header = ({ location }) => {\n  let headerStyle = \"\"\n  if (location.pathname === \"/about\") {\n    headerStyle = \"about-header\"\n  } else if (location.pathname === \"/\" || location.pathname === \"/1\") {\n    headerStyle = \"feed-header\"\n  }\n  return (\n    <header id={headerStyle}>\n      <nav className=\"nav-wrapper transparent\">\n        <div className=\"container\">\n          <Link to=\"/1\" className=\"brand-logo\">\n            Medion's website\n          </Link>\n          <ul id=\"link-list\" className=\"hide-on-med-and-down right\">\n            <li>\n              <Link to=\"/1\">\n                <span>Feed</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About me</Link>\n            </li>\n            <li>\n              <AppContext.Consumer>\n                {({ isAuthorized }) =>\n                  isAuthorized ? (\n                    <Link to=\"/logout\">Logout</Link>\n                  ) : (\n                    <Link to=\"/login\">Login</Link>\n                  )\n                }\n              </AppContext.Consumer>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default withRouter(Header)\n","import React from \"react\"\nimport ReactLoading from \"react-loading\"\n\nconst LoadingBlock = ({ color = \"grey\", size = \"32\" }) => (\n  <ReactLoading\n    id=\"loading-block\"\n    className=\"row\"\n    type=\"spin\"\n    color={color}\n    height={`${size}px`}\n    width={`${size}px`}\n  />\n)\n\nconst withLoadingBlock = Component => ({ isLoading, ...rest }) => {\n  if (isLoading) {\n    return <LoadingBlock />\n  }\n  return <Component {...rest} />\n}\n\nexport { LoadingBlock, withLoadingBlock }\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { fetchPostsInfo } from \"../../utils/crud\"\n\nimport { LoadingBlock } from \"../Loading\"\nimport { MinimalisticError } from \"../Errors\"\n\nimport \"./FeedNav.css\"\n\nexport default class FeedNav extends Component {\n  state = {\n    isLoading: true,\n    isError: false,\n    postsPerPage: 0,\n    totalNumOfPosts: 0,\n  }\n\n  async componentDidMount() {\n    const resp = await fetchPostsInfo()\n    if (resp.error !== \"\") {\n      console.error(resp.error)\n      this.setState({ isError: true })\n    } else {\n      const { postsPerPage, totalNumOfPosts } = resp.body\n      this.setState({ postsPerPage, totalNumOfPosts })\n    }\n    this.setState({ isLoading: false })\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingBlock />\n    }\n\n    if (this.state.isError) {\n      return (\n        <MinimalisticError content=\"Navigation bar wasn't loaded.\" />\n      )\n    }\n\n    const isNextDisabled =\n      this.props.currentPageNum <\n      Math.ceil(this.state.totalNumOfPosts / this.state.postsPerPage)\n        ? \"\"\n        : \"disabled\"\n    const isPrevDisabled =\n      this.props.currentPageNum > 1 ? \"\" : \"disabled\"\n    const prev = this.props.currentPageNum - 1\n    const next = this.props.currentPageNum + 1\n    return (\n      <div className=\"row\">\n        <div className=\"col s8 offset-s2 text-white\">\n          <div className=\"row\">\n            <div className=\"col s12 m8 left-align\">\n              <Link\n                to={`/${prev}`}\n                className={`btn ${isPrevDisabled} blue navBtn`}\n              >\n                <i className=\"material-icons left\">arrow_back</i>Prev\n              </Link>\n              <Link\n                to={`/${next}`}\n                className={`btn ${isNextDisabled} blue navBtn`}\n              >\n                <i className=\"material-icons right\">arrow_forward</i>\n                Next\n              </Link>\n            </div>\n            <div\n              id=\"page-counter\"\n              className=\"col s12 m4  right-align grey-text\"\n            >\n              Page {this.props.currentPageNum}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport dayjs from \"dayjs\"\nimport relativeTime from \"dayjs/plugin/relativeTime\"\n\nimport \"./Post.css\"\n\ndayjs.extend(relativeTime)\n\nconst PostCard = props => (\n  <div id=\"post\" className=\"card white-text grey darken-4\">\n    <div className=\"card-content\">{props.children}</div>\n  </div>\n)\n\nconst Post = ({ title, content }) => {\n  return (\n    <PostCard>\n      <span className=\"card-title center-align truncate\">\n        <h5>{title}</h5>\n      </span>\n      <p>{content}</p>\n    </PostCard>\n  )\n}\n\nconst PostEdit = ({ title, content, inputChangeHandler }) => {\n  return (\n    <PostCard>\n      <span className=\"card-title center-align truncate\">\n        <textarea\n          onChange={inputChangeHandler}\n          value={title}\n          placeholder=\"***\"\n          name=\"editTitle\"\n          id=\"title\"\n          className=\"materialize-textarea white-text center-align\"\n        />\n      </span>\n      <textarea\n        onChange={inputChangeHandler}\n        value={content}\n        placeholder=\"...\"\n        name=\"editContent\"\n        id=\"content\"\n        type=\"text\"\n        className=\"materialize-textarea white-text\"\n      />\n    </PostCard>\n  )\n}\n\nconst PostEditHeader = ({ postID }) => (\n  <div id=\"post-edit-header\" className=\"right-align\">\n    <Link\n      className=\"yellow-text text-darken-4\"\n      to={`/post/${postID}?edit=true`}\n    >\n      Edit\n    </Link>\n    <Link className=\"red-text text-lighten-1\" to={`/post/${postID}/delete`}>\n      Remove\n    </Link>\n  </div>\n)\n\nconst PostTime = ({ creationTime, lastEdited }) => {\n  creationTime = dayjs.unix(creationTime).fromNow()\n  lastEdited = lastEdited !== 0 ? dayjs.unix(lastEdited).fromNow() : \"\"\n  return (\n    <div id=\"post-date\" className=\"right-align grey-text\">\n      Posted {creationTime}\n      {lastEdited === \"\" || creationTime === lastEdited || (\n        <span> [changed {lastEdited}]</span>\n      )}\n    </div>\n  )\n}\n\nconst PostNav = props => (\n  <div className=\"row\">\n    <div className=\"col s6 left-align\">\n      <button className=\"btn transparent\" onClick={props.history.goBack}>\n        <i className=\"material-icons left\">arrow_back</i>Back\n      </button>\n    </div>\n    <div className=\"col s6 right-align\">{props.children}</div>\n  </div>\n)\n\nexport { Post, PostEdit, PostEditHeader, PostTime, PostNav }\n","import React, { Component } from \"react\"\n\nimport { createPost } from \"../../utils/crud\"\nimport { validatePost } from \"../../utils/helpers\"\n\nimport { SimpleError } from \"../Errors\"\nimport { PostEdit } from \"../Post\"\nimport \"./CreatePost.css\"\n\nexport default class CreatePost extends Component {\n  state = {\n    editTitle: \"\",\n    editContent: \"\",\n    error: \"\",\n  }\n\n  inputChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value, errorMsg: \"\" })\n  }\n\n  handleFormSubmit = async e => {\n    e.preventDefault()\n    const editTitle = this.state.editTitle.trim()\n    const editContent = this.state.editContent.trim()\n    const validateError = validatePost(editTitle, editContent)\n    if (validateError !== \"\") {\n      this.setState({ error: validateError })\n      return\n    }\n\n    let newPost = {\n      title: editTitle,\n      content: editContent,\n    }\n\n    const resp = await createPost(newPost)\n\n    if (resp.error !== \"\") {\n      console.error(resp.error)\n      this.setState({ error: resp.error })\n      return\n    }\n\n    this.props.appendPostHandler({\n      ...newPost,\n      id: resp.body.id,\n      creation_time: Date.now() / 1000,\n      last_edited: 0,\n    })\n\n    this.setState({\n      editTitle: \"\",\n      editContent: \"\",\n    })\n  }\n\n  render() {\n    let btnDisabled = \"\"\n    if (this.state.editContent.trim().length === 0) {\n      btnDisabled = \"disabled\"\n    }\n    return (\n      <div id=\"create-post\" className=\"row\">\n        <div className=\"col s8 offset-s2\">\n          <div className=\"row\">\n            {this.state.error && (\n              <div className=\"col s12\">\n                <SimpleError error={this.state.error} />\n              </div>\n            )}\n            <form onSubmit={this.handleFormSubmit}>\n              <div className=\"col s12\">\n                <PostEdit\n                  title={this.state.editTitle}\n                  content={this.state.editContent}\n                  inputChangeHandler={this.inputChangeHandler}\n                />\n              </div>\n              <div className=\"col s12\">\n                <div id=\"create-post-footer\" className=\"input-field right\">\n                  <button className={`btn blue ${btnDisabled}`}>Post</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { AppContext } from \"../utils/helpers\"\n\nimport { Post, PostTime, PostEditHeader } from \"./Post\"\n\nexport default function Posts({ posts }) {\n  return (\n    <div className=\"row\">\n      {posts.map((post, i) => {\n        if (post.content.length > 400) {\n          post.content = post.content.substring(0, 400) + \" ...\"\n        }\n        if (post.title.length === 0) {\n          post.title = \"***\"\n        }\n        return (\n          <div key={i} className=\"row\">\n            <div className=\"col s8 offset-s2\">\n              <AppContext.Consumer>\n                {({ isAuthorized }) =>\n                  isAuthorized && (\n                    <div className=\"col s12\">\n                      <PostEditHeader postID={post.id} />\n                    </div>\n                  )\n                }\n              </AppContext.Consumer>\n              <div className=\"col s12\">\n                <Link to={`/post/${post.id}`}>\n                  <Post title={post.title} content={post.content} />\n                </Link>\n              </div>\n              <div className=\"col s12\">\n                <PostTime\n                  creationTime={post.creation_time}\n                  lastEdited={post.last_edited}\n                />\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React, { Component, Fragment } from \"react\"\n\nimport { fetchPosts } from \"./../utils/crud\"\nimport { AppContext } from \"../utils/helpers\"\n\nimport { LoadingBlock } from \"./../components/Loading\"\nimport { MinimalisticError } from \"./../components/Errors\"\nimport FeedNav from \"./../components/FeedNav\"\nimport CreatePost from \"./../components/CreatePost\"\nimport Posts from \"./../components/Posts\"\n\nimport \"./Feed.css\"\n\nexport default class Feed extends Component {\n  static contextType = AppContext\n\n  state = {\n    isLoading: true,\n    isError: false,\n    posts: {},\n    pageNum: 1,\n  }\n\n  setPosts(key, data) {\n    this.setState(prevState => ({\n      posts: { ...prevState.posts, [key]: data },\n    }))\n  }\n\n  appendPostHandler = newPost => {\n    this.setState(prevState => {\n      if (prevState.posts[1]) {\n        prevState.posts[1].unshift(newPost)\n      } else {\n        prevState.posts = { 1: [newPost] }\n      }\n      return { posts: prevState.posts }\n    })\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const urlParam = parseInt(props.match.params.id)\n    if (urlParam && state.pageNum !== urlParam) {\n      return { pageNum: urlParam }\n    }\n    return null\n  }\n\n  async getPosts() {\n    const resp = await fetchPosts(this.state.pageNum)\n    if (resp.error !== \"\") {\n      console.error(resp.error)\n      this.setState({ isError: true })\n    } else {\n      this.setPosts(this.state.pageNum, resp.body)\n    }\n    this.setState({ isLoading: false })\n  }\n\n  componentDidMount() {\n    this.getPosts()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const isPresentInPosts = this.state.pageNum in this.state.posts\n    if (\n      prevState.pageNum !== this.state.pageNum &&\n      !isPresentInPosts\n    ) {\n      this.getPosts()\n    } else if (isPresentInPosts && this.state.isError) {\n      this.setState({ isError: false })\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingBlock />\n    }\n\n    return (\n      <Fragment>\n        {this.context.isAuthorized && this.state.pageNum === 1 && (\n          <CreatePost appendPostHandler={this.appendPostHandler} />\n        )}\n        {this.state.isError ? (\n          <MinimalisticError content=\"Posts wasn't loaded.\" />\n        ) : (\n          <Fragment>\n            <Posts\n              posts={this.state.posts[this.state.pageNum] || []}\n              history={this.props.history}\n            />\n            <FeedNav currentPageNum={this.state.pageNum} />\n          </Fragment>\n        )}\n      </Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport queryString from \"query-string\"\n\nimport { validatePost, AppContext } from \"../utils/helpers\"\nimport { fetchPost, updatePost } from \"./../utils/crud\"\n\nimport { LoadingBlock } from \"./../components/Loading\"\nimport {\n  Post as PostDiv,\n  PostEdit,\n  PostNav,\n  PostTime,\n} from \"./../components/Post\"\nimport {\n  SimpleError,\n  MinimalisticError,\n} from \"./../components/Errors\"\nimport \"./Post.css\"\n\nexport default class Post extends Component {\n  static contextType = AppContext\n\n  constructor(props) {\n    super(props)\n    if (props.match.params.id.length !== 24) {\n      this.props.history.push(\"/page-was-not-found/error404\")\n    }\n    this.state = {\n      title: \"\",\n      content: \"\",\n      editTitle: \"\",\n      editContent: \"\",\n      creationTime: 0,\n      lastEdited: 0,\n      postId: props.match.params.id,\n      isFetchingPostError: false,\n      error: \"\",\n      isLoading: true,\n      isEditMode: queryString.parse(this.props.location.search).edit,\n    }\n  }\n\n  cancelHandler = () => {\n    this.setState(prevState => ({\n      editTitle: prevState.title,\n      editContent: prevState.content,\n    }))\n    this.props.history.push(this.props.match.url)\n  }\n\n  updatePostHandler = async () => {\n    const editTitle = this.state.editTitle.trim()\n    const editContent = this.state.editContent.trim()\n    const isTitleChanged = this.state.title !== editTitle\n    const isContentChanged = this.state.content !== editContent\n\n    if (!isTitleChanged && !isContentChanged) {\n      this.props.history.push(this.props.match.url)\n      return\n    }\n\n    const validateError = validatePost(editTitle, editContent)\n    if (validateError !== \"\") {\n      this.setState({ error: validateError })\n      return\n    }\n\n    const error = await updatePost({\n      id: this.state.postId,\n      title: editTitle,\n      content: editContent,\n    })\n    if (error !== \"\") {\n      console.error(error)\n      this.setState({ error })\n      return\n    }\n    this.props.history.push(this.props.match.url)\n  }\n\n  inputChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  async componentDidMount() {\n    const resp = await fetchPost(this.state.postId)\n    if (resp.error !== \"\") {\n      console.error(resp.error)\n      this.setState({ isFetchingPostError: true })\n    } else {\n      const { title, content, creation_time, last_edited } = resp.body\n      this.setState({\n        title,\n        content,\n        editTitle: title,\n        editContent: content,\n        creationTime: creation_time,\n        lastEdited: last_edited,\n      })\n    }\n    this.setState({ isLoading: false })\n  }\n\n  componentDidUpdate() {\n    if (!this.context.isAuthorized) {\n      return\n    }\n    const values = queryString.parse(this.props.location.search)\n    if (!this.state.isEditMode && values.edit) {\n      this.setState({ isEditMode: true, error: \"\" })\n    } else if (this.state.isEditMode && !values.edit) {\n      this.setState({ isEditMode: false, error: \"\" })\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingBlock />\n    }\n\n    if (this.state.isFetchingPostError) {\n      return <MinimalisticError content=\"Post doesn't exist.\" />\n    }\n    return (\n      <div className=\"row\">\n        <div className=\"col s8 offset-s2\">\n          <div className=\"col s12\">\n            <PostNav history={this.props.history}>\n              {this.context.isAuthorized &&\n                (this.state.isEditMode ? (\n                  <Fragment>\n                    <button\n                      className=\"btn nav-btn green\"\n                      onClick={this.cancelHandler}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className=\"btn nav-btn blue\"\n                      onClick={this.updatePostHandler}\n                    >\n                      Update\n                    </button>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <Link\n                      className=\"btn nav-btn red darken-3\"\n                      to={`${this.props.match.url}/delete`}\n                    >\n                      Delete\n                    </Link>\n                    <Link\n                      className=\"btn nav-btn orange darken-3\"\n                      to={`${this.props.match.url}?edit=true`}\n                    >\n                      Edit\n                    </Link>\n                  </Fragment>\n                ))}\n            </PostNav>\n          </div>\n          <div className=\"col s12\">\n            {this.state.error && (\n              <SimpleError error={this.state.error} />\n            )}\n          </div>\n\n          <div className=\"col s12\">\n            {this.context.isAuthorized && this.state.isEditMode ? (\n              <PostEdit\n                title={this.state.editTitle}\n                content={this.state.editContent}\n                inputChangeHandler={this.inputChangeHandler}\n              />\n            ) : (\n              <PostDiv\n                title={this.state.title || \"***\"}\n                content={this.state.content}\n              />\n            )}\n          </div>\n          <div className=\"col s12\">\n            <PostTime\n              creationTime={this.state.creationTime}\n              lastEdited={this.state.lastEdited}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n\nimport { SimpleError } from \"../Errors\"\nimport \"./newQAComponent.css\"\n\nexport default (question, action) =>\n  class extends Component {\n    state = {\n      error: \"\",\n    }\n\n    buttonHandler = async props => {\n      try {\n        await action(props)\n      } catch (error) {\n        this.setState({ error: error.message })\n      }\n    }\n\n    render() {\n      return (\n        <div id=\"qa-component\" className=\"row valign-wrapper\">\n          <div className=\"col s6 offset-s3\">\n            <div className=\"row center-align\">\n              {this.state.error && <SimpleError error={this.state.error} />}\n              <div id=\"title\" className=\"col s12 center-align white-text\">\n                <h4>{question}</h4>\n              </div>\n              <div className=\"col s12 m6 right-align btnDiv\">\n                <button\n                  onClick={this.props.history.goBack}\n                  className=\"btn btn-large waves-effect waves-light green\"\n                >\n                  Cancel\n                </button>\n              </div>\n              <div className=\"col s12 m6 left-align btnDiv\">\n                <button\n                  onClick={() => this.buttonHandler(this.props)}\n                  type=\"button\"\n                  className=\"btn btn-large waves-effect waves-light blue\"\n                >\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n","import { deletePost } from \"./../utils/crud\"\n\nimport newQAComponent from \"./../components/newQAComponent\"\n\nexport default newQAComponent(\n  \"Are you sure you wanna delete this post?\",\n  async props => {\n    const error = await deletePost(props.match.params.id)\n    if (error !== \"\") {\n      throw new Error(error)\n    }\n    props.history.goBack()\n  },\n)\n","import React, { Component } from \"react\"\n\nexport default class EmailForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  }\n\n  inputChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value.trimLeft() })\n    if (e.target.name === \"message\") {\n      window.scrollTo(0, document.body.scrollHeight)\n    }\n  }\n\n  handleHTMLFormSubmit = async e => {\n    e.preventDefault()\n  }\n\n  render() {\n    return (\n      <form id=\"email-form\" onSubmit={this.handleHTMLFormSubmit}>\n        <div className=\"input-field\">\n          <input\n            onChange={this.inputChangeHandler}\n            value={this.state.name}\n            className=\"white-text\"\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n          />\n          <label htmlFor=\"name\">Your name</label>\n        </div>\n        <div className=\"input-field\">\n          <input\n            onChange={this.inputChangeHandler}\n            value={this.state.email}\n            className=\"white-text\"\n            name=\"email\"\n            id=\"email\"\n            type=\"email\"\n          />\n          <label htmlFor=\"email\">Your email</label>\n        </div>\n        <div className=\"input-field\">\n          <textarea\n            onChange={this.inputChangeHandler}\n            value={this.state.message}\n            name=\"message\"\n            id=\"message\"\n            className=\"materialize-textarea white-text\"\n            cols=\"30\"\n            rows=\"10\"\n          ></textarea>\n          <label htmlFor=\"message\">Your message</label>\n        </div>\n        <div id=\"submit\" className=\"input-field left\">\n          <button className=\"btn-large blue\">Send</button>\n        </div>\n      </form>\n    )\n  }\n}\n","import React, { Fragment, Component } from \"react\"\nimport EmailForm from \"../components/EmailForm\"\nimport M from \"materialize-css\"\nimport \"./About.css\"\n\nexport default class About extends Component {\n  componentDidMount() {\n    M.Parallax.init(document.querySelectorAll(\".parallax\"))\n    M.Tabs.init(document.querySelectorAll(\".tabs\"))\n  }\n  render() {\n    return (\n      <Fragment>\n        {/* <!-- services / tabs --> */}\n        <section\n          id=\"services\"\n          className=\"section grey darken-4 white-text\"\n        >\n          <div className=\"container\">\n            <div className=\"row \">\n              <div className=\"col s12 l6\">\n                <h2>Who am I?</h2>\n                <p>\n                  Volodia iz susidskoho dvora, obviously. This is my\n                  ala portfolio landing page, but I didn't have time\n                  to fill it with all the information required. I may\n                  do it latter.\n                </p>\n              </div>\n              <div className=\"col s12 l6 \">\n                <ul className=\"tabs grey darken-3 \">\n                  <li className=\"tab col s6\">\n                    <a href=\"#programming\">Programming</a>\n                  </li>\n                  <li className=\"tab col s6\">\n                    <a href=\"#hobbies\">Hobbies</a>\n                  </li>\n                </ul>\n                <div id=\"programming\" className=\"col s12\">\n                  <p className=\"flow-text \">Programming</p>\n                  <p>I will edit this latter, I promise!</p>\n                </div>\n                <div id=\"hobbies\" className=\"col s12\">\n                  <p className=\"flow-text\">Hobbies</p>\n                  <p>\n                    Too lazy to fill this section about me right now,\n                    but I'll go back to it later. Anyway, why are you\n                    reading this? I mean, don't you have more\n                    important things to do with your time?\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* <!-- parallax --> */}\n        <div className=\"parallax-container\">\n          <div className=\"parallax\">\n            <img\n              src=\"images/code.jpeg\"\n              alt=\"\"\n              className=\"responsive-img\"\n            />\n          </div>\n        </div>\n\n        {/* <!-- contact form --> */}\n        <section id=\"contact\" className=\" section grey darken-4\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <h2 className=\"white-text center-align\">\n                Get In Touch\n              </h2>\n              <div className=\"col s12 l5 white-text\">\n                <div className=\"row\">\n                  <div className=\"col s12\">\n                    <h4>\n                      Write me an email\n                      <span role=\"img\" aria-label=\":)\">\n                        &#128522;\n                      </span>\n                    </h4>\n                  </div>\n                  <div className=\"col s12\">\n                    <EmailForm />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l5 offset-l2 white-text\">\n                <div className=\"col s12\">\n                  <h4>\n                    Or reach me on socials\n                    <span role=\"img\" aria-label=\";)\">\n                      &#128521;\n                    </span>\n                  </h4>\n                </div>\n                <div className=\"col s12\">\n                  <ul id=\"socials-list\">\n                    <li>\n                      <a href=\"https://github.com/meddion\">Github</a>\n                    </li>\n                    <li>\n                      <a href=\"https://t.me/Medionn\">Telegram</a>\n                    </li>\n                    <li>\n                      <a href=\"https://instagram.com/meddionn\">\n                        Instagram\n                      </a>\n                    </li>\n                    <li>volodia23byk@gmail.com</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport auth from \"./../utils/auth\"\nimport { loginUser } from \"./../utils/crud\"\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errorMsg: \"\",\n  }\n\n  validateForm() {\n    const { username, password } = this.state\n    if (username.length < 3 || username.length > 32) {\n      return \"Username must contain 2 - 32 symbols in it.\"\n    }\n    if (password.length < 6 || password.length > 32) {\n      return \"Password must contain 6 - 32 symbols in it (without spaces).\"\n    }\n    return \"\"\n  }\n\n  inputChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value.trim(), errorMsg: \"\" })\n  }\n\n  handleFormSubmit = async e => {\n    e.preventDefault()\n    const errorMsg = this.validateForm()\n    if (errorMsg !== \"\") {\n      this.setState({ errorMsg })\n      return\n    }\n    const err = await loginUser(this.state.username, this.state.password)\n    if (err !== \"\") {\n      this.setState({ errorMsg: err })\n      return\n    }\n    auth.authStatus = true\n    this.props.history.push(\"/1\")\n  }\n\n  render() {\n    return (\n      <form className=\"row\" onSubmit={this.handleFormSubmit}>\n        <div className=\"col s6 push-s3 center-align white-text\">\n          <h4>Login form</h4>\n          <div className=\"row left-align\">\n            <div className=\"input-field col s12\">\n              <input\n                onChange={this.inputChangeHandler}\n                value={this.state.username}\n                name=\"username\"\n                type=\"text\"\n                data-length=\"32\"\n                className=\"white-text\"\n              />\n              <label htmlFor=\"username\">Username</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                onChange={this.inputChangeHandler}\n                value={this.state.password}\n                name=\"password\"\n                type=\"password\"\n                className=\"validate white-text\"\n              />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n            <div id=\"errorMsg\" className=\"col s12 orange-text text-darken-4\">\n              {this.state.errorMsg}\n            </div>\n            <div className=\"col s12\">\n              <button className=\"btn blue\" type=\"submit\">\n                Login\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Login\n","import auth from \"./../utils/auth\"\nimport { logoutUser } from \"./../utils/crud\"\n\nimport newQAComponent from \"./../components/newQAComponent\"\n\nexport default newQAComponent(\"Do you want to logout?\", async props => {\n  const error = await logoutUser()\n  if (error !== \"\") {\n    throw new Error(error)\n  }\n  auth.authStatus = false\n  props.history.push(\"/1\")\n})\n","import React from \"react\"\n\nexport default function Page404() {\n  return (\n    <div className=\"container center-align white-text\">\n      <h1>404</h1>\n      <p>Page wasn't found.</p>\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\"\n\nimport auth from \"./../utils/auth\"\nimport { AppContext } from \"../utils/helpers\"\n\nimport { insideContainer, insideSection } from \"./Reusable\"\nimport Header from \"./Header\"\nimport Feed from \"./../pages/Feed\"\nimport Post from \"./../pages/Post\"\nimport DeletePost from \"./../pages/DeletePost\"\nimport About from \"./../pages/About\"\nimport Login from \"./../pages/Login\"\nimport Logout from \"./../pages/Logout\"\nimport Page404 from \"./../pages/Page404\"\n\nexport default class App extends Component {\n  state = {\n    isAuthorized: false,\n  }\n\n  componentDidMount() {\n    auth.stateChange.subscribe(isAuthorized =>\n      this.setState({ isAuthorized }),\n    )\n  }\n  render() {\n    return (\n      <AppContext.Provider\n        value={{ isAuthorized: this.state.isAuthorized }}\n      >\n        <Router>\n          <Header />\n          <Switch>\n            <ProtectedRoute\n              exact\n              path=\"/logout\"\n              redirect=\"/login\"\n              component={Logout}\n            />\n            <NeedToBeUnauthorizedToSeeRoute\n              exact\n              path=\"/login\"\n              redirect=\"/\"\n              component={Login}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/post/:id/delete\"\n              redirect=\"/login\"\n              component={DeletePost}\n            />\n            <Route exact path=\"/about\" component={About} />\n            <PageRoute exact path=\"/post/:id\" component={Post} />\n            <PageRoute exact path=\"/:id?\" component={Feed} />\n            <PageRoute path=\"*\" component={Page404} />\n          </Switch>\n        </Router>\n      </AppContext.Provider>\n    )\n  }\n}\n\nconst PageRoute = ({ component, ...rest }) => {\n  const PageComponent = insideSection(insideContainer(component))\n  return (\n    <Route {...rest} render={props => <PageComponent {...props} />} />\n  )\n}\n\nconst ProtectedRoute = ({ redirect, ...rest }) => {\n  return (\n    <AppContext.Consumer>\n      {({ isAuthorized }) =>\n        !isAuthorized ? (\n          <Redirect to={redirect} />\n        ) : (\n          <PageRoute {...rest} />\n        )\n      }\n    </AppContext.Consumer>\n  )\n}\n\nconst NeedToBeUnauthorizedToSeeRoute = ({ ...rest }) => {\n  return (\n    <AppContext.Consumer>\n      {({ isAuthorized }) => (\n        <AppContext.Provider value={{ isAuthorized: !isAuthorized }}>\n          <ProtectedRoute {...rest} />\n        </AppContext.Provider>\n      )}\n    </AppContext.Consumer>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport axios from \"axios\"\nimport \"materialize-css\"\nimport \"./index.css\"\nimport App from \"./components/App\"\n\n// We enable to send cookies with a request\n\naxios.defaults.withCredentials = true\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}